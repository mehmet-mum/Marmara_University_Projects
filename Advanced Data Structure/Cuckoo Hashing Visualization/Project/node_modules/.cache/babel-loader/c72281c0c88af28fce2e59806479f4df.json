{"ast":null,"code":"var _jsxFileName = \"/home/mehmet/Desktop/cuckoo_hashing/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      num_of_tables: 0,\n      table_size: 0,\n      inserting_number: 0,\n      check_loop: false\n    };\n\n    this.add_numbers_to_selector = (select_id, min_num, max_num) => {\n      var selector = document.getElementById(select_id);\n      selector.innerHTML = \"\";\n\n      for (min_num; min_num <= max_num; min_num++) {\n        selector.options[selector.options.length] = new Option(min_num);\n      }\n    };\n\n    this.create_tables = () => {\n      document.getElementById(\"user_inputs\").className = \"passive\";\n      document.getElementById(\"cuckoo_hashing\").className = \"active\";\n      var number_of_tables = document.getElementById(\"select_1\").value;\n      var number_of_cells = document.getElementById(\"select_2\").value;\n      this.setState({\n        num_of_tables: number_of_tables,\n        table_size: number_of_cells\n      });\n\n      for (number_of_tables; number_of_tables > 0; number_of_tables--) {\n        this.add_cells_to_tables(\"table_\" + number_of_tables, number_of_cells);\n      }\n\n      this.add_indexes(number_of_cells);\n    };\n\n    this.add_cells_to_tables = (table_id, number_of_cells) => {\n      var table = document.getElementById(table_id);\n      table.className = \"active\";\n\n      for (number_of_cells; number_of_cells > 0; number_of_cells--) {\n        table.appendChild(document.createElement(\"p\"));\n      }\n    };\n\n    this.add_indexes = number => {\n      var indexes = document.getElementById(\"indexes\");\n      indexes.className = \"index\";\n\n      for (let i = 0; i < number; i++) {\n        var tag = document.createElement(\"p\");\n        tag.innerHTML = i;\n        indexes.appendChild(tag);\n      }\n    };\n\n    this.hash_function_1 = (key, table_size) => {\n      return key % table_size;\n    };\n\n    this.hash_function_2 = (key, table_size) => {\n      var value = key;\n      var sum = 0;\n\n      while (value) {\n        sum += value % 10;\n        value = Math.floor(value / 10);\n      }\n\n      return (sum * key + key) % table_size;\n    };\n\n    this.hash_function_3 = (key, table_size) => {\n      var value = key;\n      var sum = 0;\n      var i = 23;\n\n      while (value) {\n        sum += value % 10 * i;\n        value = Math.floor(value / 10);\n        i++;\n      }\n\n      return sum % table_size;\n    };\n\n    this.hash_function_4 = (key, table_size) => {\n      return key ** 2 % table_size;\n    };\n\n    this.hash_function_5 = (key, table_size) => {\n      var value = parseInt(key.toString().split('').reverse().join(''));\n      return value % table_size;\n    };\n\n    this.change_message = (message, color) => {\n      console.log(message);\n      var message_tag = document.getElementById(\"message\");\n      message_tag.innerHTML = message;\n      message_tag.className = color;\n    };\n\n    this.handle_change = e => {\n      this.change_message(\"Ready for hashing :)\", \"green\");\n    };\n\n    this.handle_click = e => {\n      var butt = e.target.id;\n      var input_number = document.getElementById(\"input_number\").value;\n\n      if (input_number === \"\") {\n        this.change_message(\"Input is empty!\", \"red\");\n      } else {\n        input_number = parseInt(input_number);\n\n        if (butt === \"insert\") {\n          this.setState({\n            inserting_number: input_number\n          });\n          this.insert(input_number, 1);\n        } else if (butt === \"delete\") {\n          this.delete(input_number);\n        } else if (butt === \"search\") {\n          this.search(input_number);\n        }\n      }\n    };\n\n    this.get_key_index = (key, table_index) => {\n      var hash_index = -1;\n\n      if (table_index === 1) {\n        hash_index = this.hash_function_1(key, this.state.table_size);\n      } else if (table_index === 2) {\n        hash_index = this.hash_function_2(key, this.state.table_size);\n      } else if (table_index === 3) {\n        hash_index = this.hash_function_3(key, this.state.table_size);\n      } else if (table_index === 4) {\n        hash_index = this.hash_function_4(key, this.state.table_size);\n      } else if (table_index === 5) {\n        hash_index = this.hash_function_5(key, this.state.table_size);\n      }\n\n      return hash_index;\n    };\n\n    this.insert = (key, table_index) => {\n      if (this.state.check_loop) {\n        if (this.state.inserting_number === key && table_index === 1) {// GO rehash\n        }\n      }\n\n      var hash_index = this.get_key_index(key, table_index);\n      var table_children = document.getElementById(\"table_\" + table_index).children;\n      var cell_value = table_children[hash_index + 1].innerHTML;\n\n      if (cell_value === \"\") {\n        this.change_message(\"Insertion is successfull!\", \"green\");\n        table_children[hash_index + 1].innerHTML = key;\n      } else {\n        table_children[hash_index + 1].innerHTML = key;\n\n        if (table_index === this.state.num_of_tables) {\n          table_index = 1;\n        } else {\n          table_index++;\n        }\n\n        cell_value = parseInt(cell_value);\n        this.setState({\n          check_loop: true\n        });\n        this.insert(cell_value, table_index);\n      }\n    };\n\n    this.delete = key => {};\n\n    this.search = key => {\n      for (let i = 1; i <= this.state.num_of_tables; i++) {\n        var hash_index = this.get_key_index(key, i);\n        var table_children = document.getElementById(\"table_\" + i).children;\n        var cell_value = table_children[hash_index + 1].innerHTML;\n\n        if (parseInt(cell_value) === key) {\n          console.log(cell_value);\n          this.change_message(key + \" is found at index \" + hash_index + \" of table \" + i - 1, \"green\");\n          return;\n        }\n      }\n\n      this.change_message(key + \" is not found!\", \"red\");\n    };\n  }\n\n  componentDidMount() {\n    this.add_numbers_to_selector(\"select_1\", 2, 5);\n    this.add_numbers_to_selector(\"select_2\", 10, 30);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"user_inputs\",\n      className: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, \"Please select number of tables and number of cells in the tables\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, \"Number of tables:\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"select_1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, \"Number of cells:\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"select_2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Tables\",\n      onClick: this.create_tables,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"cuckoo_hashing\",\n      className: \"passive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hash_operations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, \"Cuckoo Hashing\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    }, \"Number: \"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"input_number\",\n      type: \"number\",\n      min: \"0\",\n      onChange: this.handle_change,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"insert\",\n      className: \"button\",\n      type: \"submit\",\n      value: \"Insert\",\n      onClick: this.handle_click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"delete\",\n      className: \"button\",\n      type: \"submit\",\n      value: \"Delete\",\n      onClick: this.handle_click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"search\",\n      className: \"button\",\n      type: \"submit\",\n      value: \"Search\",\n      onClick: this.handle_click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      id: \"message\",\n      className: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, \"Ready for hashing :)\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"tables\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"indexes\",\n      className: \"passive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }, \"indexes\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"table_1\",\n      className: \"passive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }, \"Table 1\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"table_2\",\n      className: \"passive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, \"Table 2\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"table_3\",\n      className: \"passive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }, \"Table 3\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"table_4\",\n      className: \"passive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 15\n      }\n    }, \"Table 4\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"table_5\",\n      className: \"passive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, \"Table 5\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mehmet/Desktop/cuckoo_hashing/src/App.js"],"names":["React","Component","App","state","num_of_tables","table_size","inserting_number","check_loop","add_numbers_to_selector","select_id","min_num","max_num","selector","document","getElementById","innerHTML","options","length","Option","create_tables","className","number_of_tables","value","number_of_cells","setState","add_cells_to_tables","add_indexes","table_id","table","appendChild","createElement","number","indexes","i","tag","hash_function_1","key","hash_function_2","sum","Math","floor","hash_function_3","hash_function_4","hash_function_5","parseInt","toString","split","reverse","join","change_message","message","color","console","log","message_tag","handle_change","e","handle_click","butt","target","id","input_number","insert","delete","search","get_key_index","table_index","hash_index","table_children","children","cell_value","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    num_of_tables: 0,\n    table_size: 0,\n    inserting_number : 0,\n    check_loop: false\n  }\n\n  add_numbers_to_selector = (select_id, min_num, max_num) =>{\n    var selector = document.getElementById(select_id);\n    selector.innerHTML = \"\";\n\n    for( min_num; min_num<=max_num; min_num++){\n      selector.options[selector.options.length] = new Option(min_num);\n    }\n  }\n\n  create_tables = () =>{\n    document.getElementById(\"user_inputs\").className = \"passive\";\n    document.getElementById(\"cuckoo_hashing\").className = \"active\"\n\n    var number_of_tables = document.getElementById(\"select_1\").value;\n    var number_of_cells = document.getElementById(\"select_2\").value;\n\n    this.setState(\n      {\n        num_of_tables: number_of_tables,\n        table_size: number_of_cells\n      }\n    )\n\n    for(number_of_tables; number_of_tables>0; number_of_tables--){\n      this.add_cells_to_tables(\"table_\" + number_of_tables, number_of_cells);\n    }\n\n    this.add_indexes(number_of_cells);\n    \n    \n\n  } \n  \n  componentDidMount(){\n    this.add_numbers_to_selector(\"select_1\", 2, 5);\n    this.add_numbers_to_selector(\"select_2\", 10, 30);\n  }\n\n  add_cells_to_tables = (table_id, number_of_cells) =>{\n    var table = document.getElementById(table_id);\n    table.className = \"active\";\n    for( number_of_cells; number_of_cells > 0; number_of_cells--){\n      table.appendChild(document.createElement(\"p\"));\n    }\n  }\n\n  add_indexes = (number) =>{\n    var indexes = document.getElementById(\"indexes\");\n    indexes.className = \"index\";\n    for(let i = 0; i < number; i++){\n      var tag = document.createElement(\"p\");\n      tag.innerHTML = i;\n      indexes.appendChild(tag);\n    }\n  }\n  \n\n  hash_function_1 = (key, table_size) =>{\n    return key % table_size\n  }\n\n  hash_function_2 = (key, table_size) =>{\n    var value = key;\n    var sum = 0;\n    while (value) {\n      sum += value % 10;\n      value = Math.floor(value / 10);\n    }\n    return ((sum * key) + key) % table_size\n  }\n\n  hash_function_3 = (key, table_size) =>{\n    var value = key;\n    var sum = 0;\n    var i = 23;\n    while (value) {\n      sum += (value % 10) * i;\n      value = Math.floor(value / 10);\n      i++;\n    }\n    return (sum) % table_size\n  }\n\n  hash_function_4 = (key, table_size) =>{\n    return (key ** 2) % table_size\n  }\n\n  hash_function_5 = (key, table_size) =>{\n    var value = parseInt(key.toString().split('').reverse().join(''));\n    return value % table_size\n  }\n\n  change_message = (message, color) =>{\n    console.log(message);\n    var message_tag = document.getElementById(\"message\");\n    message_tag.innerHTML = message;\n    message_tag.className = color;\n  }\n  handle_change = (e) =>{\n    this.change_message(\"Ready for hashing :)\", \"green\");\n  }\n  handle_click = (e) =>{\n    var butt = e.target.id;\n    var input_number = document.getElementById(\"input_number\").value;\n\n    if(input_number === \"\"){\n      this.change_message(\"Input is empty!\", \"red\");\n    }\n    else{\n      input_number = parseInt(input_number);\n      if (butt === \"insert\"){\n        this.setState({inserting_number: input_number});\n        \n        this.insert(input_number, 1);\n      }\n      else if (butt === \"delete\"){\n        this.delete(input_number);\n      }\n      else if (butt === \"search\"){\n        this.search(input_number);\n      }\n    }\n  }\n\n  get_key_index = (key, table_index) =>{\n    var hash_index = -1;\n    if(table_index === 1){\n      hash_index = this.hash_function_1(key, this.state.table_size);\n    }\n    else if(table_index === 2){\n      hash_index = this.hash_function_2(key, this.state.table_size);\n    }\n    else if(table_index === 3){\n      hash_index = this.hash_function_3(key, this.state.table_size);\n    }\n    else if(table_index === 4){\n      hash_index = this.hash_function_4(key, this.state.table_size);\n    }\n    else if(table_index === 5){\n      hash_index = this.hash_function_5(key, this.state.table_size);\n    }\n\n    return hash_index\n  }\n  insert = (key, table_index) =>{\n\n    if( this.state.check_loop ){\n      if(this.state.inserting_number === key && table_index === 1){\n        // GO rehash\n      }\n    }\n\n    var hash_index = this.get_key_index(key, table_index);\n    \n    var table_children = document.getElementById(\"table_\" + table_index).children\n    var cell_value = table_children[hash_index + 1].innerHTML;\n\n    if(cell_value === \"\"){\n      this.change_message(\"Insertion is successfull!\",\"green\");\n\n      \n      table_children[hash_index + 1].innerHTML = key;\n    }\n    else{\n      table_children[hash_index + 1].innerHTML = key;\n\n      if(table_index === this.state.num_of_tables){\n        table_index = 1;\n      }\n      else{\n        table_index++;\n      }\n      cell_value = parseInt(cell_value);\n      this.setState({check_loop: true});\n      this.insert(cell_value, table_index);\n    }\n  }\n\n  delete = (key) =>{\n\n  }\n\n  search = (key) =>{\n    for( let i = 1; i <= this.state.num_of_tables; i++){\n      var hash_index = this.get_key_index(key, i);\n\n      var table_children = document.getElementById(\"table_\" + i).children\n      var cell_value = table_children[hash_index + 1].innerHTML;\n\n      if( parseInt(cell_value) === key){\n        console.log(cell_value);\n\n        this.change_message(key + \" is found at index \" + hash_index + \" of table \" + i-1, \"green\");\n        return;\n      }\n\n    }\n\n    this.change_message(key + \" is not found!\", \"red\");\n  }\n  \n  render(){\n    return(\n      <div>\n        <div id=\"user_inputs\" className=\"active\">\n          <h2>Please select number of tables and number of cells in the tables</h2>\n          <div>\n            <p>Number of tables:</p>\n            <select id=\"select_1\"></select>\n          </div>\n          \n          <div>\n            <p>Number of cells:</p>\n            <select id=\"select_2\"></select>\n          </div>\n          <input type=\"submit\" value=\"Create Tables\" onClick={this.create_tables}></input>\n        </div>\n\n        <div id=\"cuckoo_hashing\" className=\"passive\">\n          <div id=\"hash_operations\">\n            <h1>Cuckoo Hashing</h1>\n            <div>\n              <p>Number: </p>\n              <input id=\"input_number\" type=\"number\" min = \"0\" onChange={this.handle_change}></input>\n            </div>\n            <input id=\"insert\" className=\"button\" type=\"submit\" value=\"Insert\" onClick={this.handle_click}></input>\n            <input id=\"delete\" className=\"button\" type=\"submit\" value=\"Delete\" onClick={this.handle_click}></input>\n            <input id=\"search\" className=\"button\" type=\"submit\" value=\"Search\" onClick={this.handle_click}></input>\n            <h2 id=\"message\" className=\"green\">Ready for hashing :)</h2>\n          </div>\n          <div id=\"tables\">\n            <div id=\"indexes\" className=\"passive\">\n              <h3>indexes</h3>\n            </div>\n            <div id=\"table_1\" className=\"passive\">\n              <h3>Table 1</h3>\n            </div>\n            <div id=\"table_2\" className=\"passive\">\n              <h3>Table 2</h3>\n            </div>\n            <div id=\"table_3\" className=\"passive\">\n              <h3>Table 3</h3>\n            </div>\n            <div id=\"table_4\" className=\"passive\">\n              <h3>Table 4</h3>\n            </div>\n            <div id=\"table_5\" className=\"passive\">\n              <h3>Table 5</h3>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}